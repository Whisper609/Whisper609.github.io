<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java安装教程</title>
    <url>/2021/09/17/Java%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、下载安装工具"><a href="#一、下载安装工具" class="headerlink" title="一、下载安装工具"></a>一、下载安装工具</h2><p>1.java现在是oracle公司下的产品，我们想要安装java先到官网上下载安装工具。</p>
<p><strong>官网地址：<a href="https://www.oracle.com/index.html">https://www.oracle.com/index.html</a></strong></p>
<img src="/images/image1.jpg">

<p>2.在上面“支持–&gt;软件下载”，进入下载页面</p>
<img src="/images/image2.jpg">

<p>3.在这个客户下载页面下提供很多软件，我们直接向下滑动找到java,鸡儿找到java jdk,我们需要的就是java jdk.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">JDK：java development kit java开发包</span><br><span class="line">JRE：java runtime environment java运行环境</span><br><span class="line">JVM：java virtual machine java虚拟机</span><br></pre></td></tr></table></figure>

<img src="/images/image3.jpg">

<p>4.进入页面显示的JAVA的最新版本，如果需要以前的版本可向下拖动，找到相应版本</p>
<img src="/images/image4.jpg">

<p>5.我现在使用的java8版本的，这已经够用了看自己的电脑是什么系统，选择合适的系统。我的是windows,所以下面我演示的都是关于Windows的安装过程。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Windows选择完再继续看下面的，如果操作系统是32位的就选择windows x86下载，64位则选择windows x64下载。</span><br></pre></td></tr></table></figure>

<img src="/images/image5.jpg">

<p>6.点击接受条款，即可解锁下载</p>
<img src="/images/20200617142454557.png">

<h2 id="二、安装Java"><a href="#二、安装Java" class="headerlink" title="二、安装Java"></a>二、安装Java</h2><p>1.先新建一个叫JAVA的文件夹，在JAVA文件夹里面再建一个JDK和JRE的文件夹。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">JDK</span><br><span class="line">JRE</span><br></pre></td></tr></table></figure>

<p>2.打开刚刚下好的安装包，开始安装，下一步，选择要安装的目录。这里我们选择安装在刚刚新建好的JDK文件夹下，点击确定，然后点击下一步</p>
<img src="/images/image6.png">

<p>3.安装一段时间后会弹出一个对话框让你再次选择安装路径。这里安装的是一个额外的JRE。我们把它安装在之前新建的JRE文件夹中就好了。</p>
<img src="/images/image-20200719155241581.png">

<p>4.进度读完就安装完毕了，点击关闭。</p>
<img src="/images/20200617145033866.png">

<h2 id="三、JAVA的环境变量配置"><a href="#三、JAVA的环境变量配置" class="headerlink" title="三、JAVA的环境变量配置"></a>三、JAVA的环境变量配置</h2><p><strong>安装完成后我们需要进行环境配置才能在任意目录下使用JAVA</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">环境变量的配置方法：</span><br></pre></td></tr></table></figure>

<p>1.打开JDK文件夹,打开bin文件夹,进入到以下页面,复制路径</p>
<img src="/images/image-20200719160226782.png">

<p>2.打开控制面板—&gt;高级系统设置—&gt;高级—&gt;环境变量，按上面的步骤找到系统属性菜单。</p>
<img src="/images/image-20200719160650036.png">

<p>3.配置JAVA_HOME，新建一个系统变量，变量值为JAVA_HOME，变量值是将上面复制的路径粘贴下来</p>
<img src="/images/image-20200719161648198.png">

<p>4.配置path</p>
<p>添加上这一行，并把它上移至第一行</p>
<img src="/images/image-20200719164415493.png">

<p>==注意==：</p>
<blockquote>
<p>一定要将这一行移至开始，因为当计算机开始检索时会从第一个路径开始，当第一个不是所要文件的路径时，可能会出现报错</p>
</blockquote>
<p>5.配置classpath</p>
<img src="/images/image-20200719163146388.png">

<p>6.验证</p>
<p>在命令行模式输入以下命令，若没有出错则安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -version  查看版本</span><br><span class="line">java  运行java</span><br><span class="line">javac  运行javac</span><br></pre></td></tr></table></figure>

<img src="/images/image-20200719164314605.png">



























]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>git出错10054</title>
    <url>/2021/08/23/git%E5%87%BA%E9%94%9910054/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近在使用git时又报出来了这样一个错误“OpenSSL SSL_read: Connection was reset, errno 10054”，意思是OpenSSL SSL_read：连接已重置，错误号 10054 ，于是我就上网搜索了有关解决办法，下面的方法是我使用过真是不错的，我将分享给大家，希望能够帮助你们。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/Whisper609/Whisper609.github.io.git/&#x27;: OpenSSL SSL_read: Connection was reset, errno 10054</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (E:\Whiper609blog\Whisper609\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (events.js:400:28)</span><br><span class="line">      at ChildProcess.cp.emit (E:\Whiper609blog\Whisper609\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">      at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) &#123;</span><br><span class="line">    code: 128</span><br><span class="line">  &#125;</span><br><span class="line">&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure>

<p>首先出现这个的原因是网络不稳定而导致的连接超时问题。</p>
<h3 id="1-检查c盘下host文件访问的域名对应的ip是否正确"><a href="#1-检查c盘下host文件访问的域名对应的ip是否正确" class="headerlink" title="1.检查c盘下host文件访问的域名对应的ip是否正确"></a><strong>1.检查c盘下host文件访问的域名对应的ip是否正确</strong></h3><p>先在命令行窗口Ping一下github的地址，就可以获得github官网的IP地址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">E:\Whiper609blog\Whisper609&gt;ping github.com</span><br><span class="line"></span><br><span class="line">正在 Ping github.com [140.82.114.4] 具有 32 字节的数据:</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=267ms TTL=48</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=255ms TTL=48</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=247ms TTL=48</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=262ms TTL=48</span><br><span class="line"></span><br><span class="line">140.82.114.4 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = 247ms，最长 = 267ms，平均 = 257ms</span><br></pre></td></tr></table></figure>

<p>然后找到这个“C:\Windows\System32\drivers\etc”路径下的hosts文件，</p>
<p>使用记事本打开对比上面ping的ip地址和记录的IP地址是否一致，一致说明IP地址没有错误，再对上传几次，若是没有用再尝试下面的方法。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">140.82.114.4 github.com</span><br><span class="line">4 × IPv4 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure>



<h3 id="2-解除ssl限制"><a href="#2-解除ssl限制" class="headerlink" title="2.解除ssl限制"></a><strong>2.解除ssl限</strong>制</h3><p>打开命令行模式，修改设置，解除ssl验证</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global http.sslVerify &quot;false&quot;</span><br></pre></td></tr></table></figure>

<p>再上传即可。</p>
]]></content>
      <categories>
        <category>问题帮助</category>
      </categories>
      <tags>
        <tag>问题帮助</tag>
      </tags>
  </entry>
  <entry>
    <title>hadoop集群的搭建</title>
    <url>/2022/03/07/hadoop%E9%9B%86%E7%BE%A4%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-实验环境需求"><a href="#1-实验环境需求" class="headerlink" title="1.实验环境需求"></a>1.实验环境需求</h2><p>操作系统：CentOS 8操作系统</p>
<p>计算机资源：CPU 1核 0.5GHz 内存 0.5GB 硬盘 10.00GB</p>
<h2 id="2-实验原理"><a href="#2-实验原理" class="headerlink" title="2.实验原理"></a>2.<strong>实验原理</strong></h2><p>在工程环境中，往往需要在Linux环境下进行Hadoop的安装和部署，但是在一些主流的操作系统如UNIX、Windows上Hadoop也可以很好的运行，在本实验中我们在Linux操作系统中进行Hadoop的相关实验操作，我们使用的Linux操作系统版本是CentOS 8。</p>
<p>在Linux上进行Hadoop的安装部署流程如下：</p>
<ol>
<li><p><strong>安装配置JDK1.7（或更高版本）。Hadoop是用Java编写的程序，Hadoop的编译及MapReduce的运行都需要使用JDK，因此在安装Hadoop前，必须安装JDK1.7或更高版本。</strong></p>
</li>
<li><p><strong>主机名配置：在大型的Hadoop集群中，往往由成百上千个节点组成，如果通过IP地址对不同节点进行管理，那么集群维护的工作量将会十分繁重，因此在工程环境中，常常通过对每个节点设置唯一的主机名，从而实现对节点进行管理。</strong></p>
</li>
<li><p><strong>SElinux安全配置：CentOS默认启用了SElinux，在网络服务方面权限要求比较严格，因此我们需要对SElinux安全配置进行更改。</strong></p>
</li>
<li><p><strong>SSH（安全外壳协议）免密码登录配置，推荐安装OpenSSH。Hadoop需要通过SSH来启动Slave列表中各台主机的守护进程，因此SSH也是必须安装的，即使是安装伪分布式版本（因为Hadoop并没有区分开集群式和伪分布式）。对于伪分布式，Hadoop会采用与集群相同的处理方式，即按次序启动文件conf/slaves中记载的主机上的进程，只不过在伪分布式中Slave为localhost（即为自身），所以对于伪分布式Hadoop，SSH一样是必需的。</strong></p>
</li>
<li><p><strong>Hadoop核心配置。Hadoop的稳定运行需要依赖于其核心配置文件，因此当上述准备工作就绪后，我们便需要着重进行配置文件编写来实现Hadoop的可靠运行。</strong></p>
</li>
</ol>
<h2 id="3-安装Hadoop环境准备"><a href="#3-安装Hadoop环境准备" class="headerlink" title="3.安装Hadoop环境准备"></a>3.安装Hadoop环境准备</h2><h3 id="1-安装配置JDK-1-8"><a href="#1-安装配置JDK-1-8" class="headerlink" title="1.安装配置JDK 1.8"></a>1.<strong>安装配置JDK 1.8</strong></h3><p>首先查看linux系统版本，安装和Linux系统相同版本的JDK</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查看命令</span><br><span class="line">uname -r</span><br><span class="line">3.10.0-1160.el7.x86_64 #在此安装的是x86_64版本的，所以JDK也要安装64位</span><br></pre></td></tr></table></figure>

<p>我们可以在Oracle JDK的官网下载与Linux相应版本的JDK，官网地址为：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AE%8C%E6%88%90%E5%90%8E%E5%B0%86%E5%8E%8B%E7%BC%A9%E5%8C%85%E4%B8%8A%E4%BC%A0%E5%88%B0%E7%B3%BB%E7%BB%9F%E4%B8%AD%E3%80%82">http://www.oracle.com/technetwork/java/javase/downloads/index.html，下载完成后将压缩包上传到系统中。</a></p>
<p><em><strong>上传文件可以使用<a href="http://www.hostbuf.com/t/988.html">FinalShell</a>工具，远程连接成功后，直接将软件包拖入某个文件夹下即可上传文件。</strong></em></p>
<p>在此我将压缩包都放入/usr/software文件夹下，后面不再赘述。</p>
<img src="/images/image-20220307091820673-16466465109501.png">

<p>1.<em>首先创建一个工作路径，如下，我是在在/usr目录下建立名为dsy的工作路径</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /usr/dsy</span><br></pre></td></tr></table></figure>

<img src="/images/image-20220307092020939-16466465109512.png">

<p>2.<em>解压安装包，将下载好的java jdk安装包解压到刚刚创建好的路径中</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf /usr/software/jdk-8u321-linux-x64.tar.gz -C /usr/dsy</span><br></pre></td></tr></table></figure>

<img src="/images/image-20220307093651092-16466465109513.png">

<p>3.<em>配置环境变量</em></p>
<p><em>使用vi编辑器打开 ~/.bashrc文件</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi ~/.bashrc</span><br></pre></td></tr></table></figure>

<p><em>配置Java JDK环境变量，在~/.bashrc文件中添加如下内容：</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=解压的JDK路径</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/jre/lib/tools.jar</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="/images/image-20220307092551625-16466465109514.png">

<p>添加完成，按Esc键，然后输入“：wq”保存退出。</p>
<p>4.<em>更新环境变量</em></p>
<p>使用source命令更新环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source  ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>5.<em>检查JDK是否配置成功</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -version</span><br><span class="line">出现版本号说明安装成功</span><br></pre></td></tr></table></figure>

<img src="/images/image-20220307093824009-16466465109515.png">

<h3 id="2-主机名配置"><a href="#2-主机名配置" class="headerlink" title="2.主机名配置"></a>2.<strong>主机名配置</strong></h3><p>1.<strong>编辑主机名，使用vi编辑器编辑主机名配置文件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi  /etc/sysconfig/network</span><br></pre></td></tr></table></figure>

<p>修改主机名HOSTNAME为master</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=master（修改为实际的主机名master)</span><br></pre></td></tr></table></figure>

<img src="/images/image-20220307093952992-16466465109516.png">

<p><em>更改后的内容会在下次系统重启的时候生效，通过下列命令重新启动系统：</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<p>2.<strong>IP地址与主机名映射文件配置</strong></p>
<p>通过下列命令使用vi编辑器编辑主机名映射文件hosts文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi  /etc/hosts</span><br></pre></td></tr></table></figure>

<p>打开后的文件内容如下所示：</p>
<img src="/images/image-20220307094515135-16466465109517.png">

<p>增加主机名与IP地址的映射关系：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1 master</span><br></pre></td></tr></table></figure>

<img src="/images/image-20220307094637965-16466465109518.png">

<p>检测主机名与IP映射是否配置成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ping master -c 4</span><br><span class="line">PING master (127.0.0.1) 56(84) bytes of data.</span><br><span class="line">64 bytes from master (127.0.0.1): icmp_seq=1 ttl=64 time=0.071 ms</span><br><span class="line">64 bytes from master (127.0.0.1): icmp_seq=2 ttl=64 time=0.052 ms</span><br><span class="line">64 bytes from master (127.0.0.1): icmp_seq=3 ttl=64 time=0.055 ms</span><br><span class="line">64 bytes from master (127.0.0.1): icmp_seq=4 ttl=64 time=0.042 ms</span><br><span class="line"></span><br><span class="line">--- master ping statistics ---</span><br><span class="line">4 packets transmitted, 4 received, 0% packet loss, time 3004ms</span><br><span class="line">rtt min/avg/max/mdev = 0.042/0.055/0.071/0.010 ms</span><br><span class="line">能够ping通说明配置成功</span><br></pre></td></tr></table></figure>

<p><em><strong>如果无法进行正常的报文发送，请检查主机名是否配置错误，同时请检查主机名与IP地址映射是否配置正确。</strong></em></p>
<h3 id="3-SElinux安全配置"><a href="#3-SElinux安全配置" class="headerlink" title="3.SElinux安全配置"></a>3.SElinux安全配置</h3><p>CentOS默认启用了SElinux，在网络服务方面权限要求比较严格，因此我们需要将SElinux关闭。</p>
<p>1.<strong>首先先打开SElinux配置文件</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/selinux/config</span><br><span class="line"><span class="meta">#</span><span class="bash"> This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=disabled（需要修改的行）</span><br><span class="line"><span class="meta">#</span><span class="bash"> SELINUXTYPE= can take one of three values:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     minimum - Modification of targeted policy. Only selected processes are protected.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>

<p>若需要修改的行为“SELINUX=permissive”，则将它修改为“SELINUX=disabled”；若直接为“SELINUX=disabled”，则不需修改。disabled是不可用的意思，编辑完成后保存文件并退出vi编辑器。</p>
<p>2.<strong>SElinux配置强制生效</strong></p>
<p>更改后的内容会在下次系统重启的时候生效，为了操作便捷性，我们可以使用下列命令使更改即时生效，而不需要重新启动系统。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure>

<h3 id="4-配置SSH免密码登录"><a href="#4-配置SSH免密码登录" class="headerlink" title="4.配置SSH免密码登录"></a>4.配置SSH免密码登录</h3><p>1.<strong>生成秘钥</strong>，输入下面的命令，生成本机密钥文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ssh-keygen -t （通过dsa加密方式对秘钥进行加密）</span><br><span class="line">Generating public/private dsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_dsa): （注：按回车即可）</span><br><span class="line">Created directory &#x27;/root/.ssh&#x27;.</span><br><span class="line">Enter passphrase (empty for no passphrase): （注：按回车即可）</span><br><span class="line">Enter same passphrase again: （注：按回车即可）</span><br><span class="line">Your identification has been saved in /root/.ssh/id_dsa.</span><br><span class="line">（注：生成的私钥文件位置）</span><br><span class="line">Your public key has been saved in /root/.ssh/id_dsa.pub.</span><br><span class="line">（注：生成的公钥文件位置）</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:yCNMfjTp1RKuqVjUh5B8+pTh3ETf3IaWNcVLV7yzYnU root@localhost.localdomain</span><br><span class="line">The key&#x27;s randomart image is:</span><br><span class="line">+---[DSA 1024]----+</span><br><span class="line">|   ... .o     o++|</span><br><span class="line">|    ooo+.+ o = o+|</span><br><span class="line">|    o=*== o * + +|</span><br><span class="line">|   =.+=B.. . . =E|</span><br><span class="line">|    =oO S     . +|</span><br><span class="line">|   o +..     o . |</span><br><span class="line">|  . .       . .  |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>

<p>查看~/.ssh目录下的文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls ~/.ssh</span><br></pre></td></tr></table></figure>

<p>可以看到在~/.ssh目录下已经生成了id_dsa.pub（本机的公钥）和id_dsa（本机的私钥）文件：</p>
<img src="/images/image-20220307100555114-16466465109519.png">

<p>2.<strong>秘钥分发</strong></p>
<p>把当前节点的公钥文件id_dsa.pub内容输出追加到任意节点的<del>/.ssh/authorized_keys文件的末尾，则在被添加的节点上便可以免密码登录到当前的节点（由于我们是单节点部署，因此直接追加到当前节点的</del>/.ssh/authorized_keys文件中即可），输入命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<p>上述命令运行完成后我们再次查看~/.ssh目录下的文件，可以看到已经创建了authorized_keys文件：</p>
<img src="/images/image-20220307101048217-164664651095110.png">

<p>3.<strong>验证免密码登录是否配置成功</strong></p>
<p>下列命令通过设置的主机名进行连接，可以验证免密码登录是否配置成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh master</span><br></pre></td></tr></table></figure>

<p>一次登录的时候，会询问是否继续连接，输入yes即可进入，当第二次进行连接的时候则不会再出现此提示（***如果无法正常连接，请检查是否完成秘钥分发步骤操作***）：</p>
<img src="/images/image-20220307101345836-164664651095211.png">

<p>连接成功后，我们需要通过下列命令退出连接：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# exit</span><br><span class="line">登出</span><br><span class="line">Connection to master closed.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在Hadoop的安装过程中，配置免密码登录与否是无关紧要的，但是如果不配置免密码登录，每次启动Hadoop都需要输入密码才能登录到集群中的每台机器上，考虑到一般的Hadoop集群往往拥有数百台机器，因此一般来说都会配置集群节点间SSH免密码登录。</p>
<h2 id="4-安装配置Hadoop"><a href="#4-安装配置Hadoop" class="headerlink" title="4.安装配置Hadoop"></a>4.安装配置Hadoop</h2><p>Hadoop分别从三个角度将集群中的主机划分为两种角色。从集群管理来讲，将集群中的主机划分为Master和Slave；从HDFS的角度来讲，将集群中的主机划分为NameNode和DateNode（在分布式文件系统中，目录的管理很重要，而NameNode就是目录管理者）；从MapReduce的角度来讲，将主机划分为ResourceManager、ApplicationMaster和NodeManager。</p>
<p>Hadoop有官方发行的开源版本，以及CDH等多个商用版本，这里我们主要介绍Hadoop官方发行版的安装方法。可以从以下地址获得Hadoop的官方发行版：</p>
<p><a href="http://www.apache.org/dyn/closer.cgi/Hadoop/core/">http://www.apache.org/dyn/closer.cgi/Hadoop/core/</a></p>
<p>Hadoop有三种运行方式：单机模式、伪分布式与完全分布式。乍看之下，前两种方式并不能体现云计算的优势，但是它们便于程序的测试与调试，所以还是很有意义的。安装单机模式的Hadoop无须配置，在这种方式下，Hadoop被认为是一个单独的Java进程，这种方式经常用来调试。安装伪分布式Hadoop的配置过程也很简单，只需要修改几个文件，可以把伪分布式的Hadoop看做只有一个节点的集群。</p>
<h3 id="1-解压安装文件"><a href="#1-解压安装文件" class="headerlink" title="1. 解压安装文件"></a>1. <strong>解压安装文件</strong></h3><p>解压Hadoop安装文件，将文件解压到/usr/dsy目录下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf /usr/software/hadoop-2.7.7.tar.gz -C /usr/dsy</span><br></pre></td></tr></table></figure>

<img src="/images/image-20220307102214299-164664651095212.png">

<h3 id="2-配置Hadoop环境变量"><a href="#2-配置Hadoop环境变量" class="headerlink" title="2.配置Hadoop环境变量"></a>2.配置Hadoop环境变量</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi  ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>在~/.bashrc文件中增加以下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">（-------------------省略------------------------）</span><br><span class="line">export HADOOP_HOME=/usr/dsy/hadoop-2.7.7</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin:$PATH</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/sbin:$PATH</span><br></pre></td></tr></table></figure>

<p>执行如下命令，更新环境变量：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source  ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>通过下列命令验证Hadoop环境变量是否配置成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# hadoop</span><br><span class="line">Usage: hadoop [--config confdir] [COMMAND | CLASSNAME]</span><br><span class="line">  CLASSNAME            run the class named CLASSNAME</span><br><span class="line"> or</span><br><span class="line">  where COMMAND is one of:</span><br><span class="line">  fs                   run a generic filesystem user client</span><br><span class="line">  version              print the version</span><br><span class="line">  jar &lt;jar&gt;            run a jar file</span><br><span class="line">                       note: please use &quot;yarn jar&quot; to launch</span><br><span class="line">                             YARN applications, not this command.</span><br><span class="line">  checknative [-a|-h]  check native hadoop and compression libraries availability</span><br><span class="line">  distcp &lt;srcurl&gt; &lt;desturl&gt; copy file or directories recursively</span><br><span class="line">  archive -archiveName NAME -p &lt;parent path&gt; &lt;src&gt;* &lt;dest&gt; create a hadoop archive</span><br><span class="line">  classpath            prints the class path needed to get the</span><br><span class="line">  credential           interact with credential providers</span><br><span class="line">                       Hadoop jar and the required libraries</span><br><span class="line">  daemonlog            get/set the log level for each daemon</span><br><span class="line">  trace                view and modify Hadoop tracing settings</span><br><span class="line"></span><br><span class="line">Most commands print help when invoked w/o parameters.</span><br></pre></td></tr></table></figure>

<p><em><strong>如果没有正确输出相关信息，请检查~/.bashrc文件中的Hadoop环境变量是否配置正确，同时请确定是否使用source ~/.bashrc命令更新环境变量配置。</strong></em></p>
<h3 id="3-编辑Hadoop配置文件"><a href="#3-编辑Hadoop配置文件" class="headerlink" title="3.编辑Hadoop配置文件"></a><strong>3.编辑Hadoop配置文件</strong></h3><p>1.打开hadoop-env.sh配置文件进行编辑</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> vi /usr/dsy/hadoop-2.7.7/etc/hadoop/hadoop-env.sh</span><br><span class="line"> (-------------------省略------------------------)</span><br><span class="line"><span class="meta">#</span><span class="bash"> Set Hadoop-specific environment variables here.</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The only required environment variable is JAVA_HOME.  All others are</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> optional.  When running a distributed configuration it is best to</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> JAVA_HOME <span class="keyword">in</span> this file, so that it is correctly defined on</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> remote nodes.</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The java implementation to use.</span></span><br><span class="line">export JAVA_HOME=$&#123;JAVA_HOME&#125;（注：需要对此行内容进行更改，为Hadoop绑定Java运行环境)</span><br><span class="line"><span class="meta">#</span><span class="bash"> The jsvc implementation to use. Jsvc is required to run secure datanodes</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> that <span class="built_in">bind</span> to privileged ports to provide authentication of data transfer</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> protocol.  Jsvc is not required <span class="keyword">if</span> SASL is configured <span class="keyword">for</span> authentication of</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> data transfer protocol using non-privileged ports.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">export</span> JSVC_HOME=<span class="variable">$&#123;JSVC_HOME&#125;</span></span></span><br><span class="line"></span><br><span class="line">export HADOOP_CONF_DIR=$&#123;HADOOP_CONF_DIR:-&quot;/etc/hadoop&quot;&#125;</span><br><span class="line">(-------------------省略------------------------)</span><br></pre></td></tr></table></figure>

<p>在文件中进行下列内容更改，将JAVA_HOME对应的值改成实际的JDK安装目录,编辑完成后保存文件并退出vi编辑器。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export  JAVA_HOME=/usr/cx/jdk1.8.0_60</span><br></pre></td></tr></table></figure>

<img src="/images/image-20220307165702900-164664651095213.png">

<p>2.打开core-site.xml配置文件进行编辑</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /usr/dsy/hadoop-2.7.7/etc/hadoop/core-site.xml</span><br><span class="line">(-------------------省略------------------------)</span><br><span class="line">&lt;!-- Put site-specific property overrides in this file. --&gt;</span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">(注：需要在此处进行相关内容配置)</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>

<p>在文件中<configuration>和</configuration>之间增加下列内容,编辑完成保存退出。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/*设置默认的HDFS访问路径*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hdfs://master:9000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*缓冲区大小：io.file.buffer.size默认是4KB*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;io.file.buffer.size&lt;/name&gt;</span><br><span class="line">&lt;value&gt;131072&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*临时文件夹路径设置*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;file:/usr/tmp&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*设置使用hduser用户可以代理所有主机用户进行任务提交*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;hadoop.proxyuser.hduser.hosts&lt;/name&gt;</span><br><span class="line">&lt;value&gt;*&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*设置使用hduser用户可以代理所有组用户进行任务提交*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;hadoop.proxyuser.hduser.groups&lt;/name&gt;</span><br><span class="line">&lt;value&gt;*&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>

<p>3.打开yarn-site.xml文件进行配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /usr/dsy/hadoop-2.7.7/etc/hadoop/yarn-site.xml</span><br><span class="line">(-------------------省略------------------------)</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">(注：需要在此处进行相关内容配置)</span><br><span class="line">&lt;!-- Site specific YARN configuration properties --&gt;</span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>

<p>在文件中<configuration>和</configuration>之间增加下列内容，完成后保存文件并退出。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/*设置NodeManager上运行的附属服务，需配置成mapreduce_shuffle才可运行MapReduce程序*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;</span><br><span class="line">&lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*设置客户端与ResourceManager的通信地址*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;master:8032&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*设置ApplicationMaster调度器与ResourceManager的通信地址*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;master:8030&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*设置NodeManager与ResourceManager的通信地址*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;master:8031&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*设置管理员与ResourceManager的通信地址*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;master:8033&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/* ResourceManager的Web地址，监控资源调度*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;master:8088&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>

<p>4.复制mapred-site.xml.template文件并重命名为mapred-site.xml</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp /usr/dsy/hadoop-2.7.7/etc/hadoop/mapred-site.xml.template /usr/dsy/hadoop-2.7.7/etc/hadoop/mapred-site.xml</span><br></pre></td></tr></table></figure>

<p>5.打开mapred-site.xml文件并对它进行配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /usr/dsy/hadoop-2.7.7/etc/hadoop/mapred-site.xml</span><br><span class="line">(-------------------省略------------------------)</span><br><span class="line">&lt;!-- Put site-specific property overrides in this file. --&gt;</span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">(注：需要在此处进行相关内容配置)</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>

<p>在文件中<configuration>和</configuration>之间增加下列内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/*Hadoop对MapReduce运行框架一共提供了3种实现，在mapred-site.xml中通过&quot;mapreduce.framework.name&quot;这个属性来设置为&quot;classic&quot;、&quot;yarn&quot;或者&quot;local&quot;*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">&lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*MapReduce JobHistory Server地址*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;master:10020&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*MapReduce JobHistory Server Web UI访问地址*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;master:19888&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>

<p>6.创建Hadoop的数据存储目录namenode和datanode</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /hdfs/namenode</span><br><span class="line">mkdir -p /hdfs/datanode</span><br></pre></td></tr></table></figure>

<p>7.使用vi命令打开hdfs-site.xml文件进行配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /usr/dsy/hadoop-2.7.7/etc/hadoop/hdfs-site.xml</span><br></pre></td></tr></table></figure>

<p>在文件中<configuration>和</configuration>之间增加下列内容保存并退出。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">(-------------------省略------------------------)</span><br><span class="line">  Unless required by applicable law or agreed to in writing, software</span><br><span class="line">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">  See the License for the specific language governing permissions and</span><br><span class="line">  limitations under the License. See accompanying LICENSE file.</span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"></span></span><br><span class="line"><span class="bash"></span></span><br><span class="line">&lt;!-- Put site-specific property overrides in this file. --&gt;</span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line"></span><br><span class="line">/*配置SecondaryNameNode地址*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;master:9001&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*配置NameNode的数据存储目录，需要与上文创建的目录相对应*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;file:/hdfs/namenode&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*配置DataNode的数据存储目录，需要与上文创建的目录相对应*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;file:/hdfs/datanode&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*配置数据块副本数*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">&lt;value&gt;1&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">/*将dfs.webhdfs.enabled属性设置为true，否则就不能使用webhdfs的LISTSTATUS、LIST FILESTATUS等需要列出文件、文件夹状态的命令，因为这些信息都是由namenode保存的*/</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.webhdfs.enabled&lt;/name&gt;</span><br><span class="line">&lt;value&gt;true&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>

<p>8.用vi命令打开slaves文件进行配置（要与我们前文设置的主机名相互一致，否则将会引起Hadoop相关进程无法正确启动）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /usr/dsy/hadoop-2.7.7/etc/hadoop/slaves</span><br></pre></td></tr></table></figure>

<p>打开文件显示如下：</p>
<img src="/images/image-20220307171704831-164664651095214.png"> 

<p>将文件中的内容更改为下列内容</p>
<img src="/images/image-20220307171835454-164664651095215.png"> 

<h3 id="4-格式化HDFS"><a href="#4-格式化HDFS" class="headerlink" title="4.格式化HDFS"></a>4.<strong>格式化HDFS</strong></h3><p>通过下列命令格式化HDFS文件系统（***如果格式化失败，会有相关的错误日志输出，根据输出内容进行更改即可***）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hadoop namenode -format</span><br></pre></td></tr></table></figure>

<img src="/images/image-20220307172037457-164664651095216.png"> 

<h2 id="5-Hadoop运行及测试"><a href="#5-Hadoop运行及测试" class="headerlink" title="5.Hadoop运行及测试"></a>5.Hadoop运行及测试</h2><h3 id="1-启动Hadoop，通过下列命令启动Hadoop"><a href="#1-启动Hadoop，通过下列命令启动Hadoop" class="headerlink" title="1.启动Hadoop，通过下列命令启动Hadoop"></a>1.<strong>启动Hadoop</strong>，通过下列命令启动Hadoop</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">start-all.sh</span><br></pre></td></tr></table></figure>

<p>命令运行后的输出内容如下所示：</p>
<img src="/images/image-20220307172321214-164664651095217.png"> 

<p>由输出内容可以看到，每个进程在启动以及运行过程中，会将相关的日志信息记录到日志文件中，因此当进程出现问题时，一个有效的办法就是查看日志文件进行排错处理。</p>
<h3 id="2-查看进程"><a href="#2-查看进程" class="headerlink" title="2.查看进程"></a>2.查看进程</h3><p>查看相应的JVM进程确定Hadoop是否配置及启动成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure>

<p>当有以下5个进程启动时，则说明Hadoop已经成功启动，如果某个进程没有启动，则需要查看日志文件确定错误发生的原因：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# jps</span><br><span class="line">48784 DataNode（注：HDFS数据存储进程）</span><br><span class="line">52512 Jps</span><br><span class="line">49556 NodeManager（注：任务执行进程）</span><br><span class="line">48613 NameNode（注：HDFS元数据管理进程）</span><br><span class="line">49413 ResourceManager（注：资源管理进程）</span><br><span class="line">49118 SecondaryNameNode(注：HDFS数据检查点进程）</span><br></pre></td></tr></table></figure>

<h3 id="3-Web页面测试"><a href="#3-Web页面测试" class="headerlink" title="3.Web页面测试"></a>3.<strong>Web页面测试</strong></h3><p>1.当Hadoop成功启动后，我们打开浏览器，输入网址<a href="http://master:8088便可以访问任务调度的Web管理页面：">http://master:8088便可以访问任务调度的Web管理页面：</a></p>
<img src="/images/image-20220307172940397-164664651095218.png"> 

<p>2.当Hadoop成功启动后，我们打开浏览器，输入网址<a href="http://master:50070便可以访问HDFS的Web管理页面：">http://master:50070便可以访问HDFS的Web管理页面：</a></p>
<img src="/images/image-20220307173129364-164664651095219.png"> 



]]></content>
      <categories>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo插入音乐播放器</title>
    <url>/2021/09/21/hexo%E6%8F%92%E5%85%A5%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="/images/ddd.jpg" alt="ppp">

]]></content>
      <categories>
        <category>hexo技术</category>
      </categories>
      <tags>
        <tag>hexo技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Whisper609&#39;s blog</title>
    <url>/2021/07/10/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="hello-hexo"><a href="#hello-hexo" class="headerlink" title="hello hexo"></a>hello hexo</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>软件安装</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo文章中插入视频</title>
    <url>/2021/09/18/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>推荐插入视频的话可以先让视频上传到YouTube、BilBili等视频网站，这样可以分享链接来插入文章中，更好节约空间，减少出错率。</p>
<img src="/images/image7.jpg">

<p>插入后效果如下：</p>
<iframe src="//player.bilibili.com/player.html?aid=51977489&bvid=BV144411Y7mp&cid=90991841&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

]]></content>
      <categories>
        <category>hexo技术</category>
      </categories>
      <tags>
        <tag>hexo技术</tag>
      </tags>
  </entry>
  <entry>
    <title>超星学习通课件下载方法</title>
    <url>/2021/07/10/%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A%E8%AF%BE%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="超星学习通课件下载"><a href="#超星学习通课件下载" class="headerlink" title="超星学习通课件下载"></a>超星学习通课件下载</h1><p>​       最近在学习通上学习的时候，发现自己需要有些课程的课件，但是这些课程里面的课件却不下载，索性在网上找到了一种可行的方法可以下载自己想要的课件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.登录超星学习通电脑版。</span><br></pre></td></tr></table></figure>

<p><img src="/.io//Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210528104943930.png" alt="image-20210528104943930"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">2.打开你需要下载的课程的课件</span><br></pre></td></tr></table></figure>

<p><img src="/.io//Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210528105133419.png" alt="image-20210528105133419"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">3.在空白处鼠标右击，选择“检查”，或者同时按键盘&quot;Fn+F12&quot;键，出现如下界面</span><br></pre></td></tr></table></figure>

<p><img src="/.io//Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210528105455966.png" alt="image-20210528105455966"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">4.同时按&quot;Ctrl+F&quot;键，在出现的搜索框中输入&quot;objectid&quot;,再按回车，找到objectid</span><br></pre></td></tr></table></figure>

<p><img src="/.io//Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210528105739707.png" alt="image-20210528105739707"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">5.找&quot;objectid&quot;后面引号里的内容，如图复制下来,有几个文件就会有几个objectid。多个文件的话注意选择的Id。</span><br></pre></td></tr></table></figure>

<p><img src="/.io//Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210528110048848.png" alt="image-20210528110048848"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">6.在浏览器打开一个新的页面，输入http://cs.ananas.chaoxing.com/download/上面&quot;objectid&quot;后面引号里的内容，比如这里就是：</span><br><span class="line">http://cs.ananas.chaoxing.com/download/3934680559c726cd2e1a4bcc33caece0</span><br></pre></td></tr></table></figure>

<p><img src="/.io//Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210528111041572.png" alt="image-20210528111041572"></p>
<p>下载原理：</p>
<p>超星提供了 <img src="file:///C:\Users\Administrator\AppData\Roaming\Tencent\QQTempSys[5UQ[BL(6~BS2JV6W}N6[%S.png" alt="img"><a href="https://d0.ananas.chaoxing.com/download/">https://d0.ananas.chaoxing.com/download/</a> 接口，链接后加上对应课件的 objectid 即可获取到源文件。电脑上使用 Chrome 浏览器进入课程学习页面，打开开发者工具，在Console界面输入如下命令即可获取本页所有的 objectid：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">var attachments = document.getElementById(&#x27;iframe&#x27;).contentWindow.mArg.attachments;</span><br><span class="line">for (i=0;i&lt;attachments.length;i++)&#123;</span><br><span class="line">console.log(attachments[i].property.objectid</span><br></pre></td></tr></table></figure>

<p>这样你就下载成功了老师的课件！！！</p>
<p>本文主要参考了<a href="https://lmqyu.cn/1632.html%E3%80%82">https://lmqyu.cn/1632.html。</a></p>
]]></content>
      <categories>
        <category>使用帮助</category>
      </categories>
      <tags>
        <tag>使用帮助</tag>
      </tags>
  </entry>
  <entry>
    <title>免费追剧tips</title>
    <url>/2021/12/28/%E5%85%8D%E8%B4%B9%E8%BF%BD%E5%89%A7tips/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我们在空闲的时候都喜欢看剧来放松自己，我本人也是很喜欢看一些剧和综艺。甚至为了追剧买过腾讯、优酷、芒果…..等各大平台的会员，最后还是需要不断的充钱充钱充钱。为了不再花更多的钱也能让我更好的追剧，我便搜索一些可以免费看剧的方法，这些都是我自己试过之后感觉还可以的包括一些平台，也包括一些其他的方法，希望能够分享给大家。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.大师兄影视</span><br></pre></td></tr></table></figure>

<p>这个软件是我一年前在看见一位大佬推荐后下载的，它的头像如下图所示，就是大师兄（孙悟空）的。</p>
<img src="/images/dsxys.jpg" width="50%" height="50%">

<p>刚开始下载后我的手机就爆出了错误，然后我就去官网（<a href="https://dsxys.com/app/%EF%BC%89%E6%9F%A5%E7%9C%8B%E8%AF%B4%E6%98%8E%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%90%8E%E5%B0%86%E5%AE%83%E5%8A%A0%E5%85%A5%E6%89%8B%E6%9C%BA%E7%99%BD%E5%90%8D%E5%8D%95%EF%BC%8C%E4%B8%8D%E5%86%8D%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF%E3%80%82">https://dsxys.com/app/）查看说明，下载后将它加入手机白名单，不再出现错误。</a></p>
<img src="/images/20211228013737.jpg" width="50%" height="50%">

<p>大师兄首页有很多分类，包括电影、综艺、连续剧等等，国内国外的都可以看。你不需要注册信息就可以观看各种电视电影，我常用它来看看国内的综艺，它更新的速度也很快。但可能唯一的缺点就是更新的的频繁，也是它在不断修复bug，所以难免会要更新，但是这也不影响我追剧的心情。</p>
<img src="/images/dsx.jpg" width="50%" height="50%">

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">2.泰剧迷</span><br></pre></td></tr></table></figure>

<p>如果说大师兄是我看国内影视常用的软件，那么泰剧迷就是追海外剧常用的软件。一定是这个这个粉色图标的泰剧迷。</p>
<img src="/images/20211228011519.jpg" width="50%" height="50%">

<p>泰剧迷不仅能够看泰剧、还可以追韩剧、日剧、美剧、英剧等，更新速度也是杠杠的，靠它基本能够满足看海外剧的需求。</p>
<img src="/images/tjm.jpg" width="50%" height="50%">

<p>下载方法如下：</p>
<img src="/images/taijumi.jpg">

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">3.油猴插件</span><br></pre></td></tr></table></figure>

<p>Tampermonkey（油猴）是一款免费的浏览器插件，通过编写脚本可以让用户直接控制修改网页内容，改善网页体验它适用于 Chrome, Microsoft Edge, Safari, Opera Next, 和 Firefox。油猴脚本可以相互分享，安装过油猴后，在Greasemonkey上可以搜索各种各样实用的插件并安装，就可以直接使用别人写好的脚本。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">安装过程：</span><br></pre></td></tr></table></figure>

<p>一般是在百度上直接搜索油猴就会出现，点进去就会出现各种适合 Chrome, Microsoft Edge, Safari, Opera Next, 和 Firefox浏览器的版本。</p>
<img src="/images/yh1.jpg">

<p>现将chrome浏览器的安装方法演示：</p>
<p>若直接点击安装Tampermonkey可能打开如下</p>
<img src="/images/yh2.jpg" width="70%" height="70%">

<p>原因是因为这个插件需要在国外的网站上下载，所以我直接将这个插件压缩，放在下面这个地址，如若需要则下载安装：</p>
<p><strong>油猴安装包链接：</strong></p>
<p><a href="https://pan.baidu.com/s/1ZYeI5awD-SuRjasNGOO_OA">https://pan.baidu.com/s/1ZYeI5awD-SuRjasNGOO_OA</a><br>      提取码：ydfy </p>
<p>下载安装包后直接解压，按照下面的步骤打开chrome扩展程序。</p>
<img src="/images/yh3.jpg">

<p>打开扩展程序后，可以直接将.cxr的文件拉入扩展程序中或者按“加载已解压的扩展程序”，选择解压后的文件即可。</p>
<p><strong>安装完油猴后并没有结束，接着进入<a href="https://greasyfork.org/zh-CN">Greasyfork</a> 网站，在里面搜索“全网VIP视频免费”就可以出现好多插件，选择你想安装的进行安装</strong></p>
<img src="/images/qw1.jpg">

<p>当你打开爱奇艺（腾讯视频\优酷\芒果等等），选择你想要看的VIP视频，左侧就会出现如下图所示的多条解析路径。选择一条路径即可，如果解析不出来则换另外一条路径。</p>
<img src="/images/qw2.jpg">

]]></content>
      <categories>
        <category>软件推荐</category>
      </categories>
      <tags>
        <tag>软件推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo文章插入图片</title>
    <url>/2021/09/17/hexo%E6%96%87%E7%AB%A0%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、插入本地图片"><a href="#一、插入本地图片" class="headerlink" title="一、插入本地图片"></a>一、插入本地图片</h2><p>插入本地图片时统一将本地图片放在博客文件source/images文件夹下，</p>
<p>若没有在source目录下没有images文件夹则创建。</p>
<img src="/images/iimage.jpg">

<p><strong>插入图片也有两种语法可以使用，一种是markdown语法，另一种是html语法。</strong></p>
<p>markdown语法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">![](images/ddd.jpg)</span><br><span class="line">[]中是图片的提示文字,()里面是图片的地址，例：![pp](images/ddd.jpg)</span><br></pre></td></tr></table></figure>

<p><img src="/images/ddd.jpg" alt="pp"></p>
<p>html语法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;img src=&quot;images/ddd.jpg&quot;&gt;</span><br><span class="line">统一格式为&lt;img src=&quot;&quot;&gt;，&quot;&quot;中间写上图片的地址，若想对这张图片也出现提示文字，则需要在后面添上alt=&quot;&quot;，例：&lt;img src=&quot;images/ddd.jpg&quot; alt=&quot;ppp&quot;&gt;</span><br></pre></td></tr></table></figure>

<img src="/images/ddd.jpg" alt="ppp">

<h2 id="二、插入网络图片"><a href="#二、插入网络图片" class="headerlink" title="二、插入网络图片"></a>二、插入网络图片</h2><p>在浏览器上找到自己想要的图片，在新标签页打开图片，鼠标右键点击，找到图片的链接地址，如下（后面带有png、jpg、jpeg后缀是图片格式）：</p>
<img src="/images/hadoop.jpg">

<p><strong>同样插入网络图片也有两种方式：markdown格式和html格式。</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">markdown格式:</span><br><span class="line">![](网络图片地址)</span><br><span class="line">html格式:</span><br><span class="line">&lt;img src=&quot;网络图片地址&quot;&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://www.xsky.com/wp-content/uploads/2019/09/640.jpeg" alt="markdown"></p>
<img src="https://www.xsky.com/wp-content/uploads/2019/09/640.jpeg" alt="html">

<p>若想将插入的图片放大缩小，则需要在添加的图片后面加上长宽或者长宽的比例，如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;img src=&quot;图片地址&quot; width=&quot;200&quot; height=&quot;300&quot;&gt;</span><br><span class="line">或者</span><br><span class="line">&lt;img src=&quot;图片地址&quot; width=&quot;50%&quot; height=&quot;50%&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>1.将图片设置长200，宽300</p>
<img src="/images/ddd.jpg" width="200" height="300">

<p>2.将图片的长宽都设置为原来的50%</p>
<img src="/images/ddd.jpg" width="50%" height="50%">

]]></content>
      <categories>
        <category>hexo技术</category>
      </categories>
      <tags>
        <tag>hexo技术</tag>
      </tags>
  </entry>
  <entry>
    <title>My New Post</title>
    <url>/2022/03/08/My-New-Post/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>生成网易云音乐链接：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1901371647&auto=1&height=66"></iframe>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1300885489&auto=1&height=66"></iframe>

]]></content>
  </entry>
</search>
